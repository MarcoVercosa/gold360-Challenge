{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:25:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-05-18 21:25:50","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-05-18 21:25:50","originServer":"consumerCancelRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:26:09","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:28:58","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to create_update_register_bd received data.","Date":"2022-05-18 21:28:58","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-05-18 21:28:58","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-zrGtfIkBNcMEeXKv5wPrXQ ","Date":"2022-05-18 21:28:58","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:29:18","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-18 21:29:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to create_update_register_bd received data.","Date":"2022-05-18 21:29:32","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-05-18 21:29:32","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-P3idm31TJynImACnTyI-TQ ","Date":"2022-05-18 21:29:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-18 21:29:52","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-18 21:30:07","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-18 21:30:07","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to cancel_register_bd received data.","Date":"2022-05-18 21:30:07","originServer":"consumerCancelRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-05-18 21:30:07","originServer":"consumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-B_nNi2dSjLIEaFltakw3Og ","Date":"2022-05-18 21:30:07","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-18 21:30:27","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-18 21:30:27","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 17:35:58","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-05-19 17:35:59","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-05-19 17:36:00","originServer":"consumerCancelRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 17:36:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:30:47","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-05-19 18:30:48","originServer":"consumerCancelRegister"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-05-19 18:30:49","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:30","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-05-19 18:31:31","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-05-19 18:31:32","originServer":"consumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-05-19 18:31:32","originServer":"consumerCancelRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-05-19 18:31:51","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:37","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:41:38","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:42:20","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-05-19 18:46:23","originServer":"nodeAPI"}
