{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 110","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 138","Date":"2022-06-02 22:36:24","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 116","Date":"2022-06-02 22:36:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 131","Date":"2022-06-02 22:36:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 125","Date":"2022-06-02 22:36:25","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:36:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-02 22:36:45","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:36:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:54","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:36:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-02 22:36:55","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:37:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:37:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:37:15","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:39:14","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to create_update_register_bd received data.","Date":"2022-06-02 22:39:14","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-06-02 22:39:14","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-GF-pgTD4N34LivdV7flmMA ","Date":"2022-06-02 22:39:14","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:39:16","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:39:16","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to cancel_register_bd received data.","Date":"2022-06-02 22:39:16","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-06-02 22:39:16","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-PE-cFqy0o7hCgNf1-A031A ","Date":"2022-06-02 22:39:16","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:39:34","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:39:36","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:39:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 123","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 117","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 84","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 109","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 131","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 138","Date":"2022-06-02 22:43:25","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:43:45","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-02 22:43:50","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:43:50","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-02 22:43:55","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:43:55","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:44:05","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:44:10","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:44:15","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-02 22:44:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to create_update_register_bd received data.","Date":"2022-06-02 22:44:46","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-06-02 22:44:46","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-l2AT6Z7Xsp2JK4ij9GI5Rw ","Date":"2022-06-02 22:44:46","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-02 22:44:49","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-02 22:44:49","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to cancel_register_bd received data.","Date":"2022-06-02 22:44:49","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-06-02 22:44:49","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-PchHCRtIqbgDV97peWRKmw ","Date":"2022-06-02 22:44:49","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-02 22:45:06","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-02 22:45:09","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-02 22:45:09","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:29:31","originServer":"undefined"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 19","Date":"2022-06-03 21:29:31","originServer":"undefined"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:29:52","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:29:52","originServer":"undefined"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 38","Date":"2022-06-03 21:29:52","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:29:57","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:29:57","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:29:57","originServer":"undefined"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:30:29","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:30:29","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:30:29","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:30:29","originServer":"undefined"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 38","Date":"2022-06-03 21:30:29","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:30:30","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-4rhle7ywP1IZXflO071yIA ","Date":"2022-06-03 21:30:32","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:30:32","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-l8L_O2PEgHxzhVqQqn1zEQ ","Date":"2022-06-03 21:30:32","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:30:35","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:30:35","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-milrZ59icHdiSGwbVTsPWQ ","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-LjWOIutPYnC-e3Rw5QTNGw ","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-tY85_2Nk68efE7Y0i9h8bQ ","Date":"2022-06-03 21:30:36","originServer":"undefined"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 111","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 133","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 108","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 126","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 139","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 118","Date":"2022-06-03 21:31:23","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:31:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-03 21:31:45","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:31:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-03 21:31:53","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:31:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:13","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-03 21:32:29","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to create_update_register_bd received data.","Date":"2022-06-03 21:32:29","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-06-03 21:32:29","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-r1F_kwmBeDppd4zt1puLbg ","Date":"2022-06-03 21:32:29","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-03 21:32:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-03 21:32:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => [XXXX] The Consumer to cancel_register_bd received data.","Date":"2022-06-03 21:32:32","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Rabbitmq => [XXXX] The confirmation to  create_update_register_bd was sent.","Date":"2022-06-03 21:32:32","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-93dEQM-QdPwM-4bHjbBjtQ ","Date":"2022-06-03 21:32:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-03 21:32:49","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-03 21:32:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-03 21:32:52","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 110","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 117","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 130","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 137","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 123","Date":"2022-06-04 17:58:18","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:33","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-04 17:58:38","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:38","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:38","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-04 17:58:38","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-04 17:58:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-04 17:58:48","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:53","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:58","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:58","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-04 17:58:58","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-04 17:59:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-04 17:59:08","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-06 01:36:34","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 102","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 131","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 118","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 125","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 138","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 110","Date":"2022-06-06 01:36:36","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-06 01:36:36","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 01:36:56","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-06 05:16:30","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 104","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 110","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 139","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 102","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 132","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 124","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 118","Date":"2022-06-06 05:16:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-06 05:16:32","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 05:16:52","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 117","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 139","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 124","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 109","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 90","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 132","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-06 06:11:35","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-06 06:11:36","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 06:11:40","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-06 06:11:40","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 06:12:00","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-06 14:43:42","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 96","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:43","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 110","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 118","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 137","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 131","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 125","Date":"2022-06-06 14:43:44","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-06 14:43:44","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:03","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-06 14:44:04","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-08 15:47:39","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 124","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 130","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 116","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 137","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 110","Date":"2022-06-08 15:47:41","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 15:48:01","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 122","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 131","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 91","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 116","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 97","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 137","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 109","Date":"2022-06-08 16:52:12","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-08 16:52:12","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 16:52:32","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- cancel_register_bd","Date":"2022-06-08 22:47:23","originServer":"NodeConsumerCancelRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => CONNECTED to habbitMQ to consumed queue -- create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeConsumerCreateUpdateRegister"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 116","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 109","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 98","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 122","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 73","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 85","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 103","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 72","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 79","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 138","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 130","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 96","Date":"2022-06-08 22:47:26","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- create_update_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- cancel_register_bd","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Rabbitmq => Connection closed after 20 secs -- dead_cancel_queue","Date":"2022-06-08 22:47:46","originServer":"nodeAPI"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 23:30:05","originServer":"undefined"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 19","Date":"2022-06-08 23:30:05","originServer":"undefined"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 23:30:26","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:30:26","originServer":"undefined"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 38","Date":"2022-06-08 23:30:26","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 23:30:31","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:30:32","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:30:32","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:30:32","originServer":"undefined"}
{"level":"info","message": "Checking if all queue are created. Case not, will be created. This action is showing when the server is started","Date":"2022-06-08 23:31:03","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 23:31:03","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:31:03","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 23:31:03","originServer":"undefined"}
{"level":"info","message": "HTTP => SERVER started and listening on http://0.0.0.0:3000 o process 38","Date":"2022-06-08 23:31:03","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 23:31:04","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-NXRcpFFCXT6-EwSC_2MJ5A ","Date":"2022-06-08 23:31:04","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: create_update_register_bd","Date":"2022-06-08 23:31:04","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-mV-RlsL8IDB_BbgWGImn8w ","Date":"2022-06-08 23:31:04","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-z6YAXrmNnjILZ4m9i6dX1w ","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-BUHA6a-asBNsacPDpNzRDQ ","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: cancel_register_bd","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Connected to habbitMQ. Checked if Queue was created: dead_cancel_queue","Date":"2022-06-08 23:31:08","originServer":"undefined"}
{"level":"info","message": "RABBITMQ => Data received e confirmed -- queue name: create_update_register_bd -- from queue name temporary: amq.gen-AG6F_S3osWYVyCYnuDcN8g ","Date":"2022-06-08 23:31:08","originServer":"undefined"}
