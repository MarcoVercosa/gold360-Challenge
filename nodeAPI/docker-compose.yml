version: '3'

services:

  mysql:
    image: mysql
    container_name: 'mysql'
    environment:
      MYSQL_ROOT_PASSWORD: "register"
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ../dataBase:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: unless-stopped
    networks:
      - rabbitmq-mysql-nodejs-network

  rabbitmq:
    # build:
    #   dockerfile: ./Dockerfile
    #   context: .
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=register
      - RABBITMQ_DEFAULT_PASS=register
    ports:
      - 5672:5672
      - 15672-15672
    restart: unless-stopped
    volumes:
      - ~/docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/docker-conf/rabbitmq/log/:/var/rabbitmq

    networks:
      - rabbitmq-mysql-nodejs-network
    depends_on:
      - mysql

  nodeAPI:
    image: "node:16"
    container_name: 'nodeAPI'
    working_dir: /home/node/app
    environment:
      - NODE_env=production
    ports:
      - 80:3000
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq-mysql-nodejs-network
    volumes:
      - ../nodeAPI:/home/node/app
    command: "npm run prod"
    stdin_open: true
    tty: true

  nodeConsumerCreateUpdateRegister:
    image: "node:16"
    container_name: 'nodeConsumerCreateUpdateRegister'
    working_dir: /home/node/app
    environment:
      - NODE_env=production
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq-mysql-nodejs-network
    volumes:
      - ../consumerCreateUpdateRegister:/home/node/app
    command: "npm run prod"
    stdin_open: true
    tty: true

  nodeConsumerCancelRegister:
    image: "node:16"
    container_name: 'nodeConsumerCancelRegister'
    working_dir: /home/node/app
    environment:
      - NODE_env=production
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq-mysql-nodejs-network
    volumes:
      - ../consumerCancelRegister:/home/node/app
    command: "npm run prod"
    stdin_open: true
    tty: true

networks:
  rabbitmq-mysql-nodejs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
