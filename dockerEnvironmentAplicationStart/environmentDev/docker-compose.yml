version: '3.5'

services:
  mysql:
    image: mysql
    container_name: ${DATABASE_DEV_ENV}
    environment:
      MYSQL_ROOT_PASSWORD: "register"
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ${DATABASE_VOLUME_DEV_ENV}:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: unless-stopped
    networks:
      rabbitmq-mysql-nodejs-network:
        ipv4_address: "172.21.0.2"

  rabbitmq:
    # build:
    #   dockerfile: ./Dockerfile
    #   context: .
    image: rabbitmq:3-management-alpine
    container_name: ${RABBITMQ_DEV_ENV}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER_MANAGER_ENV}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS_MANAGER_ENV}
    ports:
      - 5672:5672
      - 15672-15672
    restart: unless-stopped
    volumes:
      - ${RABBITMQ_VOLUME_DATA_DEV_ENV}:/var/lib/rabbitmq/
      - ${RABBITMQ_VOLUME_LOG_DEV_ENV}:/var/rabbitmq

    networks:
      rabbitmq-mysql-nodejs-network:
        ipv4_address: "172.21.0.3"
    depends_on:
      - mysql

  nodeAPI:
    image: "node:16"
    container_name: 'nodeAPI'
    working_dir: /home/node/app
    environment:
      - NODE_ENV=developer
    ports:
      - 80:3000
      - 3030:3030
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      rabbitmq-mysql-nodejs-network:
        ipv4_address: "172.21.0.4"
    volumes:
      - ${NODE_API_VOL_APP}
      - ${NODE_API_VOL_LOGS}
    user: node
    command: ${NODE_DEV_ENV}
    stdin_open: true
    tty: true

  nodeConsumerCreateUpdateRegister:
    image: "node:16"
    container_name: 'nodeConsumerCreateUpdateRegister'
    working_dir: /home/node/app
    environment:
      - NODE_ENV=developer
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      rabbitmq-mysql-nodejs-network:
        ipv4_address: "172.21.0.5"
    volumes:
      - ${NODE_CONSUMER_CREATE_UPDATE_REGISTER_VOL_APP}
      - ${NODE_CONSUMER_CREATE_UPDATE_REGISTER_VOL_LOGS}
    user: node
    command: ${NODE_DEV_ENV}
    stdin_open: true
    tty: true

  nodeConsumerCancelRegister:
    image: "node:16"
    container_name: 'nodeConsumerCancelRegister'
    working_dir: /home/node/app
    environment:
      - NODE_ENV=developer
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      rabbitmq-mysql-nodejs-network:
        ipv4_address: "172.21.0.6"
    volumes:
      - ${NODE_CONSUMER_CANCEL_REGISTER_VOL_APP}
      - ${NODE_CONSUMER_CANCEL_REGISTER_VOL_LOGS}
    user: node
    command: ${NODE_DEV_ENV}
    stdin_open: true
    tty: true

networks:
  rabbitmq-mysql-nodejs-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.21.0.0/16"
